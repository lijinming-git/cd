#jinja2: trim_blocks:False
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ service_name }}"
  namespace: "{{ namespace }}"
spec:
  replicas: {{ replicas }}
  selector:
    matchLabels:
      app: "{{ service_name }}"
  template:
    metadata:
      labels:
        app: "{{ service_name }}"
    spec:
      imagePullSecrets:
      - name: userpass-secret
      volumes:
      - name: log-volume
        hostPath:
          path: /opt/log/stash
          type: DirectoryOrCreate
      - name: tmp-volume
        hostPath:
          path: /opt/tmp
          type: DirectoryOrCreate
      - name: kerberos
        secret:
          defaultMode: 420
          secretName: kerberos-auth63          
      hostAliases:
      - ip: "172.16.37.15"
        hostnames:
        - "ma-master01-pe2"
      - ip: "172.16.37.16"
        hostnames:
        - "ma-master02-pe2"
      - ip: "172.16.37.17"
        hostnames:
        - "ma-slave01-pe2"
      - ip: "172.16.37.18"
        hostnames:
        - "ma-slave02-pe2"
      - ip: "172.16.37.19"
        hostnames:
        - "ma-slave03-pe2"
      - ip: "172.16.37.20"
        hostnames:
        - "ma-slave04-pe2"
      - ip: "172.16.37.21"
        hostnames:
        - "ma-slave05-pe2"
      - ip: "172.16.37.22"
        hostnames:
        - "ma-slave06-pe2"
      - ip: "172.16.37.23"
        hostnames:
        - "ma-slave07-pe2"
      - ip: "172.16.37.24"
        hostnames:
        - "ma-slave08-pe2"
        

      containers:
      - name: "{{ service_name }}"
        image: "frmaaksacr.azurecr.cn/{{ image_name }}:{{ image_tag }}"
        imagePullPolicy: Always
        ports:
        - name: web
          containerPort: {{ service_port }}
        {% if extra_ports is defined %}{%- for port in extra_ports.split(',') %}
        - name: port{{loop.index}}
          containerPort: {{port}} {% endfor %}{% endif %}
        env:
        - name: version
          value: "{{ image_tag }}"
        envFrom:
        - configMapRef:
            name: global-config
        - configMapRef:
            name: "{{ service_name }}-config"
        volumeMounts:
        - mountPath: /opt/log/stash
          name: log-volume
        - mountPath: /var/tmp
          name: tmp-volume
        - mountPath: /tmp
          name: tmp-volume
        - name: "kerberos"
          mountPath: "/etc/krb5.conf"
          subPath: "krb5.conf"
        - name: "kerberos"
          mountPath: "/etc/ma.keytab"
          subPath: "ma.keytab"
          
          
        resources:
          requests:
            memory: "{{ requests_memory | default('900Mi') }}"
            cpu: "{{ requests_cpu | default('125m') }}"
          limits:
            memory: "{{ limits_memory | default('4096Mi') }}"
            cpu: "{{ limits_cpu | default('1000m') }}"
{% if (no_health_check is undefined) or (no_health_check == False) %}
        readinessProbe:
          httpGet:
            path: /ping
            port: web
          initialDelaySeconds: {{ readiness_initial_delay | default(60) }}
          periodSeconds: {{ readiness_period | default(30) }}
        livenessProbe:
          tcpSocket:
            port: web
          initialDelaySeconds: {{ liveness_initial_delay | default(60) }}
          periodSeconds: {{ liveness_period | default(30) }}
{% endif %}
