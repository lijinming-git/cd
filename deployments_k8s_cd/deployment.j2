apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ service_name }}"
  namespace: "{{ namespace }}"
spec:
  replicas: {{ deploy_conf.replicas }}
  selector:
    matchLabels:
      app: "{{ service_name }}"
  template:
    metadata:
      labels:
        app: "{{ service_name }}"
    spec:
      imagePullSecrets:
      - name: xsio-registry-secret
      volumes:
      - name: log-volume
        hostPath:
          path: /opt/log/stash
          type: DirectoryOrCreate
      - name: tmp-volume
        hostPath:
          path: /opt/tmp
          type: DirectoryOrCreate
      containers:
      - name: "{{ service_name }}"
        image: "192.168.217.70:5102/{{ namespace }}/{{ deploy_conf.image_name }}:{{ image_tag }}"
        imagePullPolicy: Always
        ports:
        - name: web
          containerPort: {{ server_port }}
{% for port in extra_ports %}
        - name: port{{ loop.index }}
          containerPort: {{ port }}
{% endfor %}
        env:
        - name: version
          value: "{{ image_tag }}"
        envFrom:
        - configMapRef:
            name: global-config
        - configMapRef:
            name: "{{ service_name }}-config"
        volumeMounts:
        - mountPath: /opt/log/stash
          name: log-volume
        - mountPath: /var/tmp
          name: tmp-volume
        - mountPath: /tmp
          name: tmp-volume
        resources:
          requests:
            memory: "{{ deploy_conf.requests_memory | default(0) }}"
            cpu: "{{ deploy_conf.requests_cpu | default(0) }}"
          limits:
            memory: "{{ deploy_conf.limits_memory | default(4G) }}"
            cpu: "{{ deploy_conf.limits_cpu | default(4)  }}"
{% if (deploy_conf.no_health_check is undefined) or (deploy_conf.no_health_check == False) %}
        readinessProbe:
          tcpSocket:
            port: web
          initialDelaySeconds: {{ deploy_conf.readiness_initial_delay | default(60) }}
          periodSeconds: {{ deploy_conf.readiness_period | default(30) }}
        livenessProbe:
          tcpSocket:
            port: web
          initialDelaySeconds: {{ deploy_conf.liveness_initial_delay | default(60) }}
          periodSeconds: {{ deploy_conf.liveness_period | default(30) }}
{% endif %}
