apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ service_name }}"
  namespace: "{{ namespace }}"
spec:
  replicas: {{ deploy_conf.replicas }}
  selector:
    matchLabels:
      app: "{{ service_name }}"
  template:
    metadata:
      labels:
        app: "{{ service_name }}"
    spec:
      imagePullSecrets:
      - name: xsio-registry-secret
      volumes:
      - name: log-volume
        hostPath:
          path: /opt/log/stash
          type: DirectoryOrCreate
      - name: tmp-volume
        hostPath:
          path: /opt/tmp
          type: DirectoryOrCreate
      hostAliases:
      - ip: "10.10.0.2"
        hostnames:
        - "hadoop01"
      - ip: "10.10.0.3"
        hostnames:
        - "hadoop02"
      - ip: "10.10.0.4"
        hostnames:
        - "hadoop03"
      - ip: "10.10.0.6"
        hostnames:
        - "hadoop04"
      - ip: "10.10.0.7"
        hostnames:
        - "hadoop05"
      - ip: "10.10.0.8"
        hostnames:
        - "hadoop06"
      - ip: "192.168.11.167"
        hostnames:
        - "prodvpc-hadoop01"
      - ip: "192.168.11.168"
        hostnames:
        - "prodvpc-hadoop02"
      - ip: "192.168.11.169"
        hostnames:
        - "prodvpc-hadoop03"
      - ip: "192.168.11.170"
        hostnames:
        - "prodvpc-hadoop04"
      - ip: "192.168.11.172"
        hostnames:
        - "prodvpc-hadoop05"
      - ip: "192.168.11.173"
        hostnames:
        - "prodvpc-hadoop06"
      - ip: "192.168.11.174"
        hostnames:
        - "prodvpc-hadoop07"
      - ip: "192.168.11.175"
        hostnames:
        - "prodvpc-hadoop08"
      containers:
      - name: "{{ service_name }}"
        image: "nexus-public.xsio.cn/{{ namespace }}/{{ deploy_conf.image_name }}:{{ image_tag }}"
        imagePullPolicy: Always
        ports:
        - name: web
          containerPort: {{ server_port }}
{% for port in extra_ports %}
        - name: port{{ loop.index }}
          containerPort: {{ port }}
{% endfor %}
        env:
        - name: version
          value: "{{ image_tag }}"
        envFrom:
        - configMapRef:
            name: global-config
        - configMapRef:
            name: "{{ service_name }}-config"
        volumeMounts:
        - mountPath: /opt/log/stash
          name: log-volume
        - mountPath: /var/tmp
          name: tmp-volume
        - mountPath: /tmp
          name: tmp-volume
{% if (deploy_conf.no_health_check is undefined) or (deploy_conf.no_health_check == False) %}
        readinessProbe:
          httpGet:
            path: /ping
            port: web
          initialDelaySeconds: {{ deploy_conf.readiness_initial_delay | default(60) }}
          periodSeconds: {{ deploy_conf.readiness_period | default(30) }}
        livenessProbe:
          tcpSocket:
            port: web
          initialDelaySeconds: {{ deploy_conf.liveness_initial_delay | default(60) }}
          periodSeconds: {{ deploy_conf.liveness_period | default(30) }}
{% endif %}
