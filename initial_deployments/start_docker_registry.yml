---
# ensure local docker registry is available
# huangchun@20181129

- name: start docker registry
  hosts: 127.0.0.1
  connection: local
  become: yes
  vars_files:
    - "../conf/{{ landscape }}/resources.yml"
    - "../conf/default/services.yml"
    - "../conf/{{ landscape }}/services.yml"
    - "./{{ landscape }}/global.yml"
    - "./{{ landscape }}/services.yml"
  tasks:

    - name: check if registry is available
      uri: 
        url: "http://127.0.0.1:5000/v2/"
        status_code: 200
        validate_certs: no
      ignore_errors: yes
      register: check_result

    - name: inspect docker registry image
      docker_image_facts:
        name: registry:2
      register: inspect_result
      when: ( check_result.failed | default(false) ) or ( check_result.docker_distribution_api_version | default('') ) != "registry/2.0"

    - name: load docker registry image
      docker_image:
        name: registry:2
        load_path: registry.tar
      register: load_result
      ignore_errors: yes
      when: ( inspect_result.images | default(['a']) | length ) == 0
 
    - name: pull registry image
      docker_image:
        name: registry:2
        state: present
        archive_path: "{{ playbook_dir }}/registry.tar"
      when: ( load_result.image | default('a') ) == {} or ( load_result.failed | default(false) )

    - name: start docker registry
      docker_container:
        name: docker_registry
        image: registry:2
        state: started
        restart_policy: always
        published_ports: 
          - 5000:5000
        volumes:
          - "{{ playbook_dir }}/registry:/var/lib/registry"
      register: start_result
      # when: ( check_result.failed | default(false) ) or ( check_result.docker_distribution_api_version | default('') ) != "registry/2.0"

    - name: check if registry is available again
      uri: 
        url: "http://127.0.0.1:5000/v2/_catalog"
        status_code: 200
        validate_certs: no
      register: check_result
      until: check_result.status == 200
      retries: 10
      delay: 10
      when: start_result.changed